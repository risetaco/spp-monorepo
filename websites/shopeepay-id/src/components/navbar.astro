---
import { getLangFromUrl, useTranslations, useTranslatedPath } from "@/i18n/utils";
import { type Menu } from "@/types";
import NavbarMenu from "./navbar-menu";

interface Props {
  menu: Menu[];
}
const { menu } = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.endsWith("/") ? pathname.slice(0, -1) : pathname;

const translatedMenu: Menu[] = menu.map((item) => ({
  ...item,
  title: t(item.lang) ?? item.title,
  url: translatePath(item.url ?? ""),
}));
---

<nav class="fixed top-0 left-0 right-0 bg-white shadow-md z-10">
  <div class="container mx-auto flex items-center h-16 justify-between p-8 md:p-0">
    <a href={translatePath("/")} class="flex items-center">
      <img src="/spay.svg" alt="SPay" />
    </a>
    <ul class="gap-8 hidden md:flex items-center">
      {
        translatedMenu
          .filter((item) => item.type !== "separator")
          .map((item) => (
            <li
              class:list={[
                "hover:text-primary cursor-pointer whitespace-nowrap",
                { "text-primary": currentPath === item.url },
                { "bg-orange-600 rounded-full px-4 py-2 text-white hover:text-white": item.type === "button" },
              ]}
            >
              <a href={item.url}>{item.title}</a>
            </li>
          ))
      }
    </ul>
    <NavbarMenu menus={translatedMenu} client:load />
  </div>
</nav>
